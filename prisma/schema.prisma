// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
// Necessary for Next auth
model Account {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    clerkId String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  channelIDs String[] @db.ObjectId
  channel   Channel[]   @relation(fields: [channelIDs], references: [id])
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
    token      String   @unique
    expires    DateTime

}


// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema



model Channel {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  userIDs String[]   @db.ObjectId
  user  User[] @relation(fields: [userIDs], references: [id])
}

